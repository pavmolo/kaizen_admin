# streamlit_app.py
import streamlit as st
import pandas as pd
import psycopg2

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DATABASE_CONFIG = {
    'dbname': 'kaizen_it_administration_aport',
    'user': 'pavmolo',
    'password': st.secrets["database"]["password"],
    'host': '45.86.182.111'
}

def get_connection():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö."""
    return psycopg2.connect(**DATABASE_CONFIG)

def create_table(table_name, fields):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏."""
    with get_connection() as conn:
        with conn.cursor() as cursor:
            fields_str = ", ".join([f"{name} {type}" for name, type in fields])
            cursor.execute(f"CREATE TABLE {table_name} ({fields_str});")
        conn.commit()

st.title("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã
st.subheader("–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã")

table_name = st.text_input("–ò–º—è —Ç–∞–±–ª–∏—Ü—ã")

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä—É—Å—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –∏ SQL —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö
data_types = {
    "–¶–µ–ª–æ–µ —á–∏—Å–ª–æ üî¢": "INTEGER",
    "–¢–µ–∫—Å—Ç üÖ∞Ô∏è": "VARCHAR",
    "–î–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç üìù": "TEXT",
    "–î–∞—Ç–∞ üìÖ": "DATE",
    "–î—Ä–æ–±–Ω–æ–µ —á–∏—Å–ª–æ üìä": "FLOAT"
}

# –ò–º–∏—Ç–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã
st.write("–ò–º–∏—Ç–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã:")
columns = st.beta_columns(2)
fields = []

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤
add_column = st.button("–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–æ–ª–±–µ—Ü")
if add_column:
    field_name = columns[0].text_input(f"–ò–º—è –ø–æ–ª—è", key=f"field_name")
    field_type = columns[1].selectbox(f"–¢–∏–ø –ø–æ–ª—è", list(data_types.keys()), key=f"field_type")
    fields.append((field_name, data_types[field_type]))

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–º–∏—Ç–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã
for field in fields:
    st.write(f"{field[0]} ({field[1]})")

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
if st.button("–°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É"):
    create_table(table_name, fields)
    st.success(f"–¢–∞–±–ª–∏—Ü–∞ {table_name} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
